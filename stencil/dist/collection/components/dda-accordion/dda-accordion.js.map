{"version":3,"file":"dda-accordion.js","sourceRoot":"","sources":["../../../src/components/dda-accordion/dda-accordion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOhE,MAAM,OAAO,YAAY;IALzB;QAMU,WAAM,GAA8B,WAAW,CAAC,CAAC,0CAA0C;QAC3F,gBAAW,GAAW,kBAAkB,CAAC,CAAC,sBAAsB;QAChE,qBAAgB,GAAW,EAAE,CAAC,CAAC,2BAA2B;QAC1D,iBAAY,GAAY,EAAE,CAAC;QAE3B,mBAAc,GAAW,MAAM,CAAC,CAAC,wBAAwB;QAExD,WAAM,GAAY,KAAK,CAAC;KA4BlC;IA1BC,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAE,uBAAuB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC1F,4DAAK,KAAK,EAAC,kBAAkB,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE;oBAIjE,4DAAK,KAAK,EAAC,gBAAgB;wBACzB,0DAAG,KAAK,EAAC,2CAA2C,IAAE,IAAI,CAAC,cAAc,CAAK;wBAC9E,6DAAM,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,WAAW,CAAQ,CAC/C;oBACN,0DAAG,KAAK,EAAE,2BAA2B,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,qBAAqB,CAAK,CAClG;gBACN,4DAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,YAAY;oBACvD,0DAAG,KAAK,EAAC,kBAAkB,IAAE,IAAI,CAAC,gBAAgB,CAAK;oBACvD,8DAAa,CACT,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, h, Host } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-accordion',\r\n  styleUrls: ['dda-accordion.css', '../../global/global.css'],\r\n  shadow: false,\r\n})\r\nexport class DdaAccordion {\r\n  @Prop() design: 'bg-border' | 'no-border' = 'bg-border'; // Default to background and border design\r\n  @Prop() header_text: string = 'Accordion Header'; // Default header text\r\n  @Prop() body_description: string = ''; // Default body description\r\n  @Prop() custom_class?: string = '';\r\n  @Prop() component_mode?: string;\r\n  @Prop() accordion_icon: string = 'info'; // Default Material icon\r\n\r\n  @State() isOpen: boolean = false;\r\n\r\n  toggleAccordion() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`accordion-container ${this.design} ${this.custom_class} ${this.component_mode}`}>\r\n          <div class=\"accordion-header\" onClick={() => this.toggleAccordion()}>\r\n            {/* <span class=\"material-symbols-outlined\">pen_size_1</span>\r\n<span class=\"material-symbols-rounded\">face</span>\r\n<span class=\"material-symbols-sharp\">face</span> */}\r\n            <div class=\"header-content\">\r\n              <i class=\"material-icons  material-symbols-outlined\">{this.accordion_icon}</i>\r\n              <span class=\"header-text\">{this.header_text}</span>\r\n            </div>\r\n            <i class={`material-icons arrow-icon`}>{this.isOpen ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}</i>\r\n          </div>\r\n          <div class={this.isOpen ? 'accordion-body' : 'dda-d-none'}>\r\n            <p class=\"body-description\">{this.body_description}</p>\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}