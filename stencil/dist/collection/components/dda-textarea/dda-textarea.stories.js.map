{"version":3,"file":"dda-textarea.stories.js","sourceRoot":"","sources":["../../../src/components/dda-textarea/dda-textarea.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["export default {\r\n  title: 'Components/Textarea',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n      description: 'Placeholder text for the textarea field',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n      description: 'Label for the textarea field',\r\n    },\r\n    max_characters: {\r\n      control: 'number',\r\n      description: 'Maximum number of characters allowed in the textarea field',\r\n    },\r\n    value: {\r\n      control: 'text',\r\n      description: 'Value of the textarea field',\r\n    },\r\n    error_message: {\r\n      control: 'text',\r\n      description: 'Error message displayed below the textarea field',\r\n    },\r\n    validation_type: {\r\n      control: { type: 'select' },\r\n      options: ['normal', 'error'],\r\n      description: 'Validation type of the textarea field',\r\n    },\r\n    input_status: {\r\n      control: { type: 'select' },\r\n      options: ['normal', 'disabled'],\r\n      description: 'Status of the textarea field',\r\n    },\r\n    helper_text: {\r\n      control: 'text',\r\n      description: 'Helper or footer text',\r\n    },\r\n    custom_class: {\r\n      control: { type: 'text' }, // Add control for custom class\r\n      description: 'Custom class for the textarea field',\r\n    },\r\n    enable_rich_editor: {\r\n      control: { type: 'boolean' },\r\n      description: 'Enable rich text editor',\r\n    },\r\n    component_mode: {\r\n      control: { type: 'check' },\r\n      options: ['light-mode'],\r\n      description: 'Mode of the textarea component',\r\n    },\r\n    input_id: {\r\n      control: { type: 'text' },\r\n      description: 'default',\r\n    },\r\n    aria_label:{ \r\n      control: { type: 'text' },\r\n      description: 'Aria label for the textarea field'\r\n    },\r\n    onchange: {\r\n      control: { type: 'text' },\r\n      description: 'onchange event for the textarea field',\r\n    }\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\n  To use the \\`dda-textarea\\` component, pass the following props:\r\n\r\n  \\`\\`\\`html\r\n<dda-textarea\r\n    placeholder=\"Enter description\"\r\n    label=\"Description\"\r\n    max_characters=\"200\"\r\n    value=\"\"\r\n    helper_text=\"This is a helper text\"\r\n    error_message=\"\"\r\n    custom_class=\"\"\r\n    component_mode=\"\"\r\n    input_id=\"input\"\r\n    aria_label=\"textarea\"\r\n    onchange=\"console.log('changed')\"\r\n></dda-textarea>\r\n  \\`\\`\\`\r\n  `,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => {\r\n  const attributes = Object.entries(args)\r\n    .filter(([key, value]) => value !== undefined && key !== 'text')\r\n    .map(([key, value]) => `${key}=\"${value}\"`)\r\n    .join(' ');\r\n\r\n  return `<dda-textarea ${attributes}></dda-textarea>`;\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  placeholder: 'Enter description',\r\n  label: 'Description',\r\n  max_characters: 200,\r\n  value: '',\r\n  helper_text: 'This is a helper text',\r\n  error_message: '',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  input_id: 'input',\r\n  aria_label: 'textarea',\r\n  onchange: '',\r\n};\r\n\r\nexport const WithErrorMessage = Template.bind({});\r\nWithErrorMessage.args = {\r\n  placeholder: 'Enter description',\r\n  label: 'Description',\r\n  max_characters: 200,\r\n  value: '',\r\n  error_message: 'This is an error message',\r\n  validation_type: 'error',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  input_id: 'input',\r\n  aria_label: 'textarea',\r\n  onchange: '',\r\n};\r\n\r\nexport const Disabled = Template.bind({});\r\nDisabled.args = {\r\n  placeholder: 'Enter description',\r\n  label: 'Description',\r\n  max_characters: 200,\r\n  value: '',\r\n  input_status: 'disabled',\r\n  helper_text: 'This is a helper text',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  input_id: 'input',\r\n  aria_label: 'textarea',\r\n  onchange: '',\r\n};\r\nexport const RichEditorEnabled = Template.bind({});\r\nRichEditorEnabled.args = {\r\n  placeholder: 'Enter rich text',\r\n  label: 'Rich Text Editor',\r\n  max_characters: 200,\r\n  value: '',\r\n  helper_text: 'This is a helper text',\r\n  enable_rich_editor: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  input_id: 'input',\r\n  aria_label: 'textarea',\r\n  onchange: '',\r\n};\r\n\r\n"]}