{"version":3,"file":"dda-toggle.stories.js","sourceRoot":"","sources":["../../../src/components/dda-toggle/dda-toggle.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["export default {\r\n  title: 'Components/Toggle',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    size: {\r\n      control: { type: 'select' },\r\n      options: ['sm', 'md', 'lg'],\r\n    },\r\n    checked: {\r\n      control: 'boolean',\r\n      description: 'Checked state of the toggle',\r\n    },\r\n    label_on: {\r\n      control: 'text',\r\n      description: 'Label for the \"On\" state',\r\n    },\r\n    label_off: {\r\n      control: 'text',\r\n      description: 'Label for the \"Off\" state',\r\n    },\r\n    group_name: {\r\n      control: 'text',\r\n      description: 'default',\r\n    },\r\n    label_for: {\r\n      control: 'text',\r\n      description: 'default',\r\n    },\r\n    input_id: {\r\n      control: 'text',\r\n      description: 'default',\r\n    },\r\n    custom_class: {\r\n      control: { type: 'text' },\r\n    },\r\n    component_mode: {\r\n      control: { type: 'check' },\r\n      options: ['light-mode'],\r\n      description: 'Mode of the toggle component',\r\n    },\r\n    aria_label: {\r\n      control: { type: 'text' },\r\n      description: 'Aria label for the toggle component',\r\n    },\r\n    onchange: {\r\n      control: { type: 'text' },\r\n      description: 'onchange event for the toggle component',\r\n    }\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\n  To use the \\`dda-toggle\\` component, pass the following props:\r\n\r\n  \\`\\`\\`html\r\n<dda-toggle\r\n    checked=\"false\"\r\n    label_on=\"On\"\r\n    label_off=\"Off\"\r\n    size=\"md\"\r\n    group_name=\"togglegroup1\"\r\n    input_id=\"testId\"\r\n    custom_class=\"\"\r\n    component_mode=\"\"\r\n    aria_label=\"toggle\"\r\n    onchange=\"console.log('changed')\"\r\n></dda-toggle>\r\n  \\`\\`\\`\r\n  `,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => {\r\n  const attributes = Object.entries(args)\r\n    .filter(([key, value]) => value !== undefined && key !== 'text')\r\n    .map(([key, value]) => `${key}=\"${value}\"`)\r\n    .join(' ');\r\n\r\n  return `<dda-toggle ${attributes}></dda-toggle>`;\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  checked: false,\r\n  label_on: 'On',\r\n  label_off: 'Off',\r\n  size: 'md',\r\n  group_name: 'togglegroup1',\r\n  input_id: 'testId',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  aria_label: 'toggle',\r\n  onchange: '',\r\n};\r\n\r\nexport const Checked = Template.bind({});\r\nChecked.args = {\r\n  checked: true,\r\n  label_on: 'On',\r\n  label_off: 'Off',\r\n  size: 'md',\r\n  group_name: 'togglegroup1',\r\n  input_id: 'testId',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  on_toggled: () => void(0),\r\n  aria_label: 'toggle',\r\n  onchange: '',\r\n};\r\n"]}