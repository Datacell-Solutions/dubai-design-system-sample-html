{"version":3,"file":"dda-avatar.js","sourceRoot":"","sources":["../../../src/components/dda-avatar/dda-avatar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-avatar',\r\n  styleUrls: ['dda-avatar.css', '../../global/input.css', '../../global/global.css'],\r\n  shadow: false,\r\n})\r\nexport class DdaAvatar {\r\n  @Prop() type: 'photo' | 'icon' | 'text' = 'photo';\r\n  @Prop() size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' = 'md';\r\n  @Prop() design: 'default' | 'status' | 'verified' | 'story' | 'notification' = 'default';\r\n  @Prop() rounded: 'square' | 'circle' = 'circle';\r\n  @Prop() src: string = ''; // For photo type\r\n  @Prop() icon: string = 'material-icons'; // For icon type\r\n  @Prop() text: string = 'AB'; // For text type\r\n  @Prop() notification_number: number = 0; // For notification design\r\n  @Prop() custom_class?: string = ''; \r\n  @State() isOpen: boolean = false;\r\n  @Prop() selected: string;\r\n  @Prop() options: string;\r\n  @Prop() component_mode?: string; \r\n  @Prop() aria_label: string;\r\n  @Prop() button_id?: string;\r\n\r\n  toggleDropdown() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  selectOption(option: string) {\r\n    this.selected = option\r\n    this.isOpen = false\r\n  }\r\n\r\n  private get parsedOptions(): string[] {\r\n    try {\r\n      return JSON.parse(this.options);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={() => this.toggleDropdown()} class={{\r\n        'dda-avatar': true,\r\n        [`avatar-type-${this.type}`]: true,\r\n        [`avatar-size-${this.size}`]: true,\r\n        [`avatar-design-${this.design}`]: true,\r\n        [`avatar-shape-${this.rounded}`]: true,\r\n        [`${this.custom_class}`]: true,\r\n        [`${this.component_mode}`]: true\r\n      }}>\r\n      {this.isOpen && (\r\n        <div class=\"dda-input-dropdown-list\">\r\n          {this.parsedOptions.length > 0 ? (\r\n            this.parsedOptions.map(option => (\r\n              <button id={this.button_id} aria-label={this.aria_label} type=\"button\"\r\n                class={`dda-input-dropdown-item ${this.selected === option ? 'selected' : ''}`}\r\n                onClick={() => {this.selectOption(option)}}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))\r\n          ) : (\r\n            <div class=\"dda-input-dropdown-item\">No options available</div>\r\n          )}\r\n        </div>\r\n      )}\r\n        {this.type === 'photo' && <img src={this.src} alt=\"Avatar\" />}\r\n        {this.type === 'icon' && <i class={`${this.icon} dda-smile`}>sentiment_satisfied</i>}\r\n        {this.type === 'text' && <span class='avatar-main-text'>{this.text}</span>}\r\n        {this.design === 'status' && <div class=\"status-circle\"></div>}\r\n        {this.design === 'verified' && <div class=\"verified-icon\"><span class=\"material-icons  material-symbols-outlined\">verified</span></div>}\r\n        {this.design === 'notification' && <div class=\"notification-circle\">{this.notification_number}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}