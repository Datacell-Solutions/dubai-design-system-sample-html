{"version":3,"file":"dda-breadcrumb.js","sourceRoot":"","sources":["../../../src/components/dda-breadcrumb/dda-breadcrumb.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAOlE,MAAM,OAAO,aAAa;IAL1B;QAMU,WAAM,GAAkC,MAAM,CAAC,CAAC,yBAAyB;QACzE,cAAS,GAAmC,eAAe,CAAC,CAAC,+BAA+B;QAC5F,iBAAY,GAAY,EAAE,CAAC;QAInC,gBAAW,GAAkD,EAAE,CAAC;KAgCjE;IA9BC,iBAAiB;QACf,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QACjE,IAAI,eAAe,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAE,IAAI,CAAC,cAAc;gBAC7B,0EAAgB,YAAY,EAAC,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE;oBACxD,2DAAI,KAAK,EAAC,gBAAgB,IACvB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAC1D,UAAI,KAAK,EAAE,uBAAuB,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE;wBACvF,SAAG,IAAI,EAAE,KAAK,CAAC,GAAG;4BACf,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,SAAG,KAAK,EAAE,gBAAgB,IAAG,KAAK,CAAC,IAAI,CAAK;4BACtE,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,gBAAO,KAAK,CAAC,IAAI,CAAQ,CAClD;wBACH,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,CACtC,SAAG,KAAK,EAAE,0CAA0C,IAAG,IAAI,CAAC,SAAS,CAAK,CAC3E,CACE,CACN,CAAC,CACC,CACD,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Host, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-breadcrumb',\r\n  styleUrls: ['dda-breadcrumb.css', '../../global/global.css'],\r\n  shadow: false,\r\n})\r\nexport class DdaBreadcrumb {\r\n  @Prop() design: 'text' | 'icon-text' | 'icon' = 'text'; // Default to text design\r\n  @Prop() separator: 'chevron_right' | 'pen_size_2' = 'chevron_right'; // Default to chevron separator\r\n  @Prop() custom_class?: string = ''; \r\n  @Prop() component_mode?: string; \r\n  @Element() el: HTMLElement;\r\n\r\n  breadcrumbs: { text: string; icon: string; url: string }[] = [];\r\n\r\n  componentWillLoad() {\r\n    const breadcrumbsData = this.el.getAttribute('data-breadcrumbs');\r\n    if (breadcrumbsData) {\r\n      this.breadcrumbs = JSON.parse(breadcrumbsData);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={this.component_mode}>\r\n          <nav aria-label=\"breadcrumb\" class={`${this.custom_class}`}>\r\n            <ol class=\"dda-breadcrumb\">\r\n              {this.breadcrumbs && this.breadcrumbs.map((crumb, index) => (\r\n                <li class={`dda-breadcrumb-item ${index === this.breadcrumbs.length - 1 ? 'active' : ''}`}>\r\n                  <a href={crumb.url}>\r\n                    {this.design !== 'text' && <i class={`material-icons`}>{crumb.icon}</i>}\r\n                    {this.design !== 'icon' && <span>{crumb.text}</span>}\r\n                  </a>\r\n                  {index < this.breadcrumbs.length - 1 && (\r\n                    <i class={`material-icons material-symbols-outlined`}>{this.separator}</i>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}