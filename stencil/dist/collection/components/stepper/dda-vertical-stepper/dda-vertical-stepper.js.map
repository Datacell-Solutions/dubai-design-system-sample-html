{"version":3,"file":"dda-vertical-stepper.js","sourceRoot":"","sources":["../../../../src/components/stepper/dda-vertical-stepper/dda-vertical-stepper.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAG,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOjE,MAAM,OAAO,kBAAkB;IAL/B;QAOU,iBAAY,GAAW,CAAC,CAAC;QACzB,iBAAY,GAAY,EAAE,CAAC;QAE1B,gBAAW,GAA6E,EAAE,CAAC;KAgCrG;IA9BC,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,sBAAsB,IAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CACrC,WAAK,KAAK,EAAE,UAAU,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE;gBAChE,WAAK,KAAK,EAAC,kBAAkB;oBAC3B,WAAK,KAAK,EAAC,MAAM;wBACf,SAAG,KAAK,EAAE,gBAAgB,IAAG,IAAI,CAAC,IAAI,CAAK,CACvC,CAEF;gBACN,WAAK,KAAK,EAAC,gBAAgB;oBACzB,WAAK,KAAK,EAAC,cAAc,IAAE,IAAI,CAAC,KAAK,CAAO;oBAC5C,WAAK,KAAK,EAAC,iBAAiB,IAAE,IAAI,CAAC,QAAQ,CAAO;oBAClD,WAAK,KAAK,EAAC,oBAAoB,IAAE,IAAI,CAAC,WAAW,CAAO,CACpD;gBACN,WAAK,KAAK,EAAC,cAAc;oBACvB,SAAG,KAAK,EAAC,2CAA2C,oBAAkB,CAClE,CACF,CACP,CAAC,CACE,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop,  State, h, Host } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-vertical-stepper',\r\n  styleUrl: 'dda-vertical-stepper.css',\r\n  shadow: false,\r\n})\r\nexport class DdaVerticalStepper {\r\n  @Prop() steps: string; // JSON string of steps\r\n  @Prop() current_Step: number = 0;\r\n  @Prop() custom_class?: string = ''; \r\n  @Prop() component_mode?: string; \r\n  @State() parsedSteps: { icon: string, title: string, subtitle: string, description: string }[] = [];\r\n\r\n  componentWillLoad() {\r\n    this.parsedSteps = JSON.parse(this.steps);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`${this.custom_class} ${this.component_mode} v-stepper-container`}>\r\n          {this.parsedSteps.map((step, index) => (\r\n            <div class={`v-step ${index <= this.current_Step ? 'active' : ''}`}>\r\n              <div class=\"v-step-indicator\">\r\n                <div class=\"icon\">\r\n                  <i class={`material-icons`}>{step.icon}</i>\r\n                </div>\r\n                {/* {index < this.parsedSteps.length - 1 && <div class=\"line\"></div>} */}\r\n              </div>\r\n              <div class=\"v-step-content\">\r\n                <div class=\"v-step-title\">{step.title}</div>\r\n                <div class=\"v-step-subtitle\">{step.subtitle}</div>\r\n                <div class=\"v-step-description\">{step.description}</div>\r\n              </div>\r\n              <div class=\"v-step-arrow\">\r\n                <i class=\"material-icons  material-symbols-outlined\">chevron_right</i>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}"]}