{"version":3,"file":"dda-chip.stories.js","sourceRoot":"","sources":["../../../src/components/dda-chip/dda-chip.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["export default {\r\n  title: 'Components/Chip',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    text: {\r\n      control: 'text',\r\n      description: 'Text to display inside the chip',\r\n    },\r\n    bg_color: {\r\n      control: { type: 'select' },\r\n      options: ['grey', 'primary', 'green', 'yellow', 'red', 'purple'],\r\n      description: 'Background color of the chip',\r\n    },\r\n    size: {\r\n      control: { type: 'select' },\r\n      options: ['sm', 'md', 'lg'],\r\n      description: 'Select the size of the chip',\r\n    },\r\n    icon: {\r\n      control: 'text',\r\n      description: 'Material Icons icon class to display at the start of the chip',\r\n    },\r\n    show_close_icon: {\r\n      control: 'boolean',\r\n      description: 'Whether to show a close icon at the end of the chip',\r\n    },\r\n    rounded: {\r\n      control: { type: 'select' },\r\n      options: ['sm', 'circle'],\r\n      description: 'Define the roundedness of the chip',\r\n    },\r\n    custom_class: {\r\n      control: { type: 'text' },\r\n      description: 'Custom class for the chip',\r\n    },\r\n    component_mode: {\r\n      control: { type: 'check' },\r\n      options: ['light-mode'],\r\n      description: 'Mode of the chip component',\r\n    },\r\n    onclick:{\r\n      control: { type: 'text' },\r\n      description: 'Function triggered when the close icon is clicked',\r\n    },\r\n  },\r\n  \r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\nTo use the \\`dda-chip\\` component, pass the following props:\r\n\r\n\\`\\`\\`html\r\n<dda-chip\r\n    bg_color=\"grey\"\r\n    icon=\"sentiment_satisfied\"\r\n    show_close_icon=\"true\"\r\n    custom_class=\"\"\r\n    component_mode=\"\"\r\n    onclick=\"console.log(\"clicked!\")\"\r\n    >Label\r\n</dda-chip>\r\n  \\`\\`\\`\r\n`,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => {\r\n  const attributes = Object.entries(args)\r\n    .filter(([key, value]) => value !== undefined && key !== 'text' && key !== 'onCloseClick')\r\n    .map(([key, value]) => `${key}=\"${value}\"`)\r\n    .join(' ');\r\n\r\n  return `\r\n    <dda-chip ${attributes}>${args.text}\r\n    </dda-chip>\r\n  `;\r\n};\r\n\r\nexport const Grey = Template.bind({});\r\nGrey.args = {\r\n  text: 'Label',\r\n  bg_color: 'grey',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  onclick: \"console.log('clicked')\",\r\n};\r\n\r\n\r\nexport const Primary = Template.bind({});\r\nPrimary.args = {\r\n  text: 'Label',\r\n  bg_color: 'primary',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  onclick: \"alert('Close icon clicked!')\",\r\n};\r\n\r\nexport const Green = Template.bind({});\r\nGreen.args = {\r\n  text: 'Label',\r\n  bg_color: 'green',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  onclick: \"() => alert('Close icon clicked!')\",\r\n};\r\n\r\nexport const Yellow = Template.bind({});\r\nYellow.args = {\r\n  text: 'Label',\r\n  bg_color: 'yellow',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  onclick: \"() => alert('Close icon clicked!')\",\r\n};\r\n\r\nexport const Red = Template.bind({});\r\nRed.args = {\r\n  text: 'Label',\r\n  bg_color: 'red',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  onclick: \"() => alert('Close icon clicked!')\",\r\n};\r\n\r\nexport const Purple = Template.bind({});\r\nPurple.args = {\r\n  text: 'Label',\r\n  bg_color: 'purple',\r\n  icon: 'sentiment_satisfied',\r\n  show_close_icon: true,\r\n  custom_class: '',\r\n  component_mode: '',\r\n  onclick: \"() => alert('Close icon clicked!')\",\r\n};"]}