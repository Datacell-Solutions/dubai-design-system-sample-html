{"version":3,"file":"dda-dropdown.js","sourceRoot":"","sources":["../../../src/components/dda-dropdown/dda-dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, State, h, Host } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-dropdown',\r\n  styleUrls: ['../../global/input.css', '../../global/global.css'],\r\n  shadow: false,\r\n})\r\nexport class DdaDropdown {\r\n  @Prop() label: string;\r\n  @Prop() options: string; // Receive options as a string\r\n  @Prop() selected: string;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() error: string;\r\n  @Prop() helper_text: string;\r\n  @Prop() type: 'bg-transparent' | 'bg-white' = 'bg-white';\r\n  @Prop() size: 'small' | 'medium' = 'medium';\r\n  @Prop() icon_mode: boolean = false; // New prop for icon mode\r\n  @Prop() custom_class?: string = ''; \r\n  @Prop() component_mode?: string; \r\n  @Prop() button_id: string;\r\n  @Prop() aria_label?: string;\r\n  \r\n  @State() isopen: boolean = false;\r\n\r\n  private get parsedOptions(): string[] {\r\n    try {\r\n      return JSON.parse(this.options);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  toggleDropdown() {\r\n    if (!this.disabled) {\r\n      this.isopen = !this.isopen;\r\n    }\r\n  }\r\n\r\n  selectOption(option: string) {\r\n    if (!this.disabled) {\r\n      this.selected = option;\r\n      this.isopen = false;\r\n    }\r\n  }\r\n\r\n  render() {  \r\n    const containerClass = [\r\n      'dda-input-container dda-inline-flex',\r\n      this.disabled ? 'dda-input-disabled' : '',\r\n      this.size ? `dda-input-size-${this.size}` : '',\r\n      this.custom_class ? `${this.custom_class}` : '',\r\n      this.component_mode,\r\n    ].filter(Boolean).join(' ');\r\n\r\n    return (\r\n      <Host>\r\n        <div class={containerClass}>\r\n          {this.label && <label htmlFor={this.button_id} class=\"dda-input-label\">{this.label}</label>}\r\n          <div class={`dda-dropdown-container ${this.type}`}>\r\n            <button id={this.button_id} aria-label={this.aria_label} type=\"button\" class=\"dda-input-field dda-dropdown-header\" onClick={() => this.toggleDropdown()}>\r\n              <i class={`three-dots material-icons`}>{this.isopen ? 'more_vert' : 'more_vert'}</i>\r\n              {!this.icon_mode && <span class=\"dda-dropdown-text\"><span>{this.selected || 'Select an option'}</span> <i class={`material-icons`}>{this.isopen ? 'keyboard_arrow_up' : 'keyboard_arrow_down'}</i></span>\r\n              }\r\n            </button>\r\n            {this.isopen && (\r\n              <div class=\"dda-input-dropdown-list\">\r\n                {this.parsedOptions.length > 0 ? (\r\n                  this.parsedOptions.map(option => (\r\n                    <button type=\"button\"\r\n                      class={`dda-input-dropdown-item ${this.selected === option ? 'selected' : ''}`}\r\n                      onClick={() => {this.selectOption(option)}}\r\n                    >\r\n                      {option}\r\n                    </button>\r\n                  ))\r\n                ) : (\r\n                  <div class=\"dda-input-dropdown-item\">No options available</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {this.helper_text && <span class=\"dda-helper-text\">{this.helper_text}</span>}\r\n          {this.error && <span class=\"dda-error-message\">{this.error}</span>}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}