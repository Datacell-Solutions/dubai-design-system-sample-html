{"version":3,"file":"dda-home-banner.js","sourceRoot":"","sources":["../../../src/components/dda-home-banner/dda-home-banner.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAOnE,MAAM,OAAO,aAAa;IAL1B;QAOW,iBAAY,GAAW,CAAC,CAAC;QAClC,WAAM,GAAkB,EAAE,CAAC;KAoD5B;IAlDC,gBAAgB;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,0BAA0B;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5D,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,0CAA0C;QACnE,CAAC;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACnE,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACxF,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,sBAAsB;gBAC/B,4DAAK,KAAK,EAAC,YAAY,EAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE;oBAClH,8DAAa,CACT;gBACN,4DAAK,KAAK,EAAE,YAAY;oBACtB,+DAAQ,KAAK,EAAC,MAAM,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE;wBAClD,0DAAG,KAAK,EAAC,gBAAgB,mBAAiB,CACnC;oBACT,6DACG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;wBAC5B,OAAO,WAAK,KAAK,EAAE,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAQ,CAAC;oBACtH,CAAC,CAAC,CACC;oBACL,+DAAQ,KAAK,EAAC,MAAM,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE;wBAClD,0DAAG,KAAK,EAAC,gBAAgB,oBAAkB,CACpC,CACL,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;CACF","sourcesContent":["import { Host, Component, h, State, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'dda-home-banner',\r\n  styleUrls: ['home-banner.css', '../../global/global.css'],\r\n  shadow: false,\r\n})\r\nexport class DdaHomeBanner {\r\n  @Element() el: HTMLElement;\r\n  @State() currentSlide: number = 0;\r\n  slides: HTMLElement[] = [];\r\n\r\n  componentDidLoad() {\r\n    this.updateSlides();\r\n    // Listen for slot changes\r\n    const slot = this.el.querySelector('slot');\r\n    slot?.addEventListener('slotchange', () => this.updateSlides());\r\n  }\r\n\r\n  updateSlides() {\r\n    this.slides = Array.from(this.el.querySelectorAll('slide'));\r\n    if (this.slides.length > 0) {\r\n      this.currentSlide = 0; // Reset slide index if slides are updated\r\n    }\r\n  }\r\n\r\n  nextSlide() {\r\n    this.currentSlide = (this.currentSlide + 1) % this.slides.length;\r\n  }\r\n\r\n  prevSlide() {\r\n    this.currentSlide = (this.currentSlide - 1 + this.slides.length) % this.slides.length;\r\n  }\r\n\r\n  setSlide(index) {\r\n    this.currentSlide = index;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"dda-slider-container\">\r\n          <div class=\"dda-slides\" style={{ innerWidth: this.slides.length * 100 + 'vw', left: this.currentSlide * -100 + '%' }}>\r\n            <slot></slot>\r\n          </div>\r\n          <div class={'slider-nav'}>\r\n            <button class=\"prev\" onClick={() => this.prevSlide()}>\r\n              <i class=\"material-icons\">chevron_left</i>\r\n            </button>\r\n            <ul>\r\n              {this.slides.map((_, index) => {\r\n                return <div class={this.currentSlide == index ? 'dots active' : 'dots'} onClick={() => this.setSlide(index)}></div>;\r\n              })}\r\n            </ul>\r\n            <button class=\"next\" onClick={() => this.nextSlide()}>\r\n              <i class=\"material-icons\">chevron_right</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}