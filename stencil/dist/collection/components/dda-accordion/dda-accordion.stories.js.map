{"version":3,"file":"dda-accordion.stories.js","sourceRoot":"","sources":["../../../src/components/dda-accordion/dda-accordion.stories.tsx"],"names":[],"mappings":"AAAA,eAAe;IACb,KAAK,EAAE,sBAAsB;IAC7B,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,MAAM,EAAE;YACN,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;YACnC,WAAW,EAAE,gEAAgE;SAC9E;QACD,WAAW,EAAE;YACX,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,8BAA8B;SAC5C;QACD,gBAAgB,EAAE;YAChB,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,mCAAmC;SACjD;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,WAAW,EAAE,6CAA6C;SAC3D;QACD,cAAc,EAAE;YACd,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,YAAY,CAAC;YACvB,WAAW,EAAE,iCAAiC;SAC/C;QACD,cAAc,EAAE;YACd,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,wCAAwC;SACtD;KACF;IACD,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EAAE;;;;;;;;;;;;;CAalB;aACM;SACF;KACF;CACF,CAAC;AAEF,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE;IACxB,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SACpC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,KAAK,MAAM,CAAC;SAC/D,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,KAAK,GAAG,CAAC;SAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,OAAO,kBAAkB,UAAU,mBAAmB,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,GAAG;IACd,MAAM,EAAE,WAAW;IACnB,WAAW,EAAE,kBAAkB;IAC/B,gBAAgB,EAAE,qCAAqC;IACvD,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;IAClB,cAAc,EAAE,MAAM;CACvB,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,GAAG;IACd,MAAM,EAAE,WAAW;IACnB,WAAW,EAAE,kBAAkB;IAC/B,gBAAgB,EAAE,qCAAqC;IACvD,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;IAClB,cAAc,EAAE,MAAM;CACvB,CAAC","sourcesContent":["export default {\r\n  title: 'Components/Accordion',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    design: {\r\n      control: { type: 'select' },\r\n      options: ['bg-border', 'no-border'],\r\n      description: 'Choice of design between two options: bg-border and no-border.',\r\n    },\r\n    header_text: {\r\n      control: 'text',\r\n      description: 'Header text of the accordion',\r\n    },\r\n    body_description: {\r\n      control: 'text',\r\n      description: 'Body description of the accordion',\r\n    },\r\n    custom_class: {\r\n      control: { type: 'text' },\r\n      description: 'Custom class to be applied to the accordion',\r\n    },\r\n    component_mode: {\r\n      control: { type: 'check' },\r\n      options: ['light-mode'],\r\n      description: 'Mode of the accordion component',\r\n    },\r\n    accordion_icon: {\r\n      control: 'text',\r\n      description: 'Material icon to display in the header',\r\n    },\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\nTo use the \\`dda-accordion\\` component, pass the following props:\r\n\r\n\\`\\`\\`html\r\n<dda-accordion \r\n  design=\"bg-border\" \r\n  header_text=\"Accordion Header\" \r\n  body_description=\"This is the accordion body content.\" \r\n  custom_class=\"\" \r\n  component_mode=\"\"\r\n  accordion_icon=\"info\">\r\n</dda-accordion>\r\n\\`\\`\\`\r\n`,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => {\r\n  const attributes = Object.entries(args)\r\n    .filter(([key, value]) => value !== undefined && key !== 'text')\r\n    .map(([key, value]) => `${key}=\"${value}\"`)\r\n    .join(' ');\r\n\r\n  return `<dda-accordion ${attributes}></dda-accordion>`;\r\n};\r\n\r\nexport const BgBorder = Template.bind({});\r\nBgBorder.args = {\r\n  design: 'bg-border',\r\n  header_text: 'Accordion Header',\r\n  body_description: 'This is the accordion body content.',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  accordion_icon: 'info',\r\n};\r\n\r\nexport const NoBorder = Template.bind({});\r\nNoBorder.args = {\r\n  design: 'no-border',\r\n  header_text: 'Accordion Header',\r\n  body_description: 'This is the accordion body content.',\r\n  custom_class: '',\r\n  component_mode: '',\r\n  accordion_icon: 'info',\r\n};\r\n"]}