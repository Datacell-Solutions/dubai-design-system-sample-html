{"version":3,"file":"dda-segmented-tabs.stories.js","sourceRoot":"","sources":["../../../../src/components/segmented-groups/dda-segmented-tabs/dda-segmented-tabs.stories.tsx"],"names":[],"mappings":"AAAA,eAAe;IACb,KAAK,EAAE,oCAAoC;IAC3C,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE,OAAO,EAAE,8CAA8C;YAChE,WAAW,EAAE,sCAAsC;SACpD;QACD,WAAW,EAAE;YACX,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;YAC9B,WAAW,EAAE,2CAA2C;SACzD;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,WAAW,EAAE,kBAAkB;SAChC;QACD,cAAc,EAAE;YACd,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YAC1B,OAAO,EAAE,CAAC,YAAY,CAAC;YACvB,WAAW,EAAE,6BAA6B;SAC3C;KACF;IACD,UAAU,EAAE;QACV,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,SAAS,EAAE;;;;;;;;;;;GAWhB;aACI;SACF;KACF;CACF,CAAC;AAEF,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE;IACxB,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SACpC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,KAAK,OAAO,CAAC;SAChE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,KAAK,GAAG,CAAC;SAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,+BAA+B;IAE9E,OAAO,uBAAuB,UAAU,WAAW,UAAU,yBAAyB,CAAC;AACzF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,SAAS,CAAC,IAAI,GAAG;IACf,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IACjC,WAAW,EAAE,QAAQ;IACrB,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;CACnB,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,SAAS,CAAC,IAAI,GAAG;IACf,KAAK,EAAE,CAAC,mBAAmB,EAAE,qBAAqB,EAAE,oBAAoB,CAAC;IACzE,WAAW,EAAE,QAAQ;IACrB,YAAY,EAAE,EAAE;IAChB,cAAc,EAAE,EAAE;CACnB,CAAC","sourcesContent":["export default {\r\n  title: 'Components/Segments/Segmented Tabs',\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    items: {\r\n      control: 'array', // Changed to 'array' to handle array of items\r\n      description: 'List of items (either text or icons)',\r\n    },\r\n    radius_type: {\r\n      control: { type: 'select' },\r\n      options: ['rounded', 'square'],\r\n      description: 'Type of border radius (rounded or square)',\r\n    },\r\n    custom_class: {\r\n      control: { type: 'text' },\r\n      description: 'Custom CSS class',\r\n    },\r\n    component_mode: {\r\n      control: { type: 'check' },\r\n      options: ['light-mode'],\r\n      description: 'Mode of the segmented group',\r\n    }\r\n  },\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: `\r\n  To use the \\`dda-segmented-tabs\\` component, pass the following props:\r\n\r\n  \\`\\`\\`html\r\n<dda-segmented-tabs\r\n    radius_type=\"square\"\r\n    custom_class=\"\"\r\n    component_mode=\"\"\r\n    items='[\"All\",\"Recent\",\"Saved\"]'\r\n></dda-segmented-tabs>\r\n  \\`\\`\\`\r\n  `,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Template = (args) => {\r\n  const attributes = Object.entries(args)\r\n    .filter(([key, value]) => value !== undefined && key !== 'items')\r\n    .map(([key, value]) => `${key}=\"${value}\"`)\r\n    .join(' ');\r\n\r\n  const itemsArray = JSON.stringify(args.items); // Convert array to JSON string\r\n\r\n  return `<dda-segmented-tabs ${attributes} items='${itemsArray}'></dda-segmented-tabs>`;\r\n};\r\n\r\nexport const TextItems = Template.bind({});\r\nTextItems.args = {\r\n  items: ['All', 'Recent', 'Saved'],\r\n  radius_type: 'square',\r\n  custom_class: '',\r\n  component_mode: '',\r\n};\r\n\r\nexport const IconItems = Template.bind({});\r\nIconItems.args = {\r\n  items: ['format_align_left', 'format_align_center', 'format_align_right'],\r\n  radius_type: 'square',\r\n  custom_class: '',\r\n  component_mode: '',\r\n};\r\n"]}